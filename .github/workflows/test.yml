name: Test

on:
  push:

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        runs-on: [ubuntu-22.04]
        tarantool:
          - '1.10'
          - '2.10'
          - '2.11'
          - '3.0'
          - '3.1'
          - '3.2'
          - '3.3'
          - '3.4'
        nightly: [false]
        include:
        # Nightly build test.
        - {runs-on: ubuntu-22.04, tarantool: '1.10', nightly: true}
    runs-on: ${{ matrix.runs-on }}
    env:
      TARANTOOL_CACHE_KEY_SUFFIX: -A-${{ github.run_id }}
    steps:
      - uses: actions/checkout@v4

      - id: latest-version
        uses: ./.github/actions/latest-version
        with:
          tarantool-series: ${{ matrix.tarantool }}
          nightly-build: ${{ matrix.nightly }}

      - name: Setup from scratch
        uses: ./
        with:
          tarantool-version: ${{ matrix.tarantool }}
          nightly-build: ${{ matrix.nightly }}

      - uses: ./.github/actions/verify-version
        with:
          tarantool-version: '${{ steps.latest-version.outputs.abc }}'
          from-cache: false

      - name: Uninstall tarantool
        run: sudo apt-get -y remove tarantool tarantool-dev tarantool-common

      - name: Setup from cache
        uses: ./
        with:
          tarantool-version: ${{ matrix.tarantool }}
          nightly-build: ${{ matrix.nightly }}

      - uses: ./.github/actions/verify-version
        with:
          tarantool-version: '${{ steps.latest-version.outputs.abc }}'
          from-cache: true

  test-concurrency:
    strategy:
      fail-fast: false
      matrix:
        runs-on:
          - ubuntu-24.04
          - ubuntu-24.04
          - ubuntu-24.04
          - ubuntu-24.04-arm
          - ubuntu-24.04-arm
          - ubuntu-24.04-arm
    runs-on: ${{ matrix.runs-on }}
    env:
      TARANTOOL_CACHE_KEY_SUFFIX: -B-${{ github.run_id }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Tarantool
        uses: ./
        with:
          tarantool-version: '2.11'

  # This test case performs basic test of the three digit version
  # support.
  #
  # It performs the following steps and checks.
  #
  # - install 1.10.14
  #   - checks: version, non-cached
  # - uninstall tarantool
  # - install 1.10.14
  #   - checks: version, cached
  # - install 1.10.LATEST
  #   - checks: version, non-cached
  test-exact-version-basic:
    runs-on: ubuntu-latest
    env:
      TARANTOOL_CACHE_KEY_SUFFIX: -C-${{ github.run_id }}
    steps:
      - uses: actions/checkout@v4

      - id: latest-version
        uses: ./.github/actions/latest-version
        with:
          tarantool-series: '1.10'

      - name: Install 1.10.14 (non-cached)
        uses: ./
        with:
          tarantool-version: '1.10.14'
          nightly-build: false

      - uses: ./.github/actions/verify-version
        with:
          tarantool-version: '1.10.14-0'
          from-cache: false

      - name: Uninstall tarantool
        run: sudo apt-get -y remove tarantool tarantool-dev tarantool-common

      - name: Install 1.10.14 (cached)
        uses: ./
        with:
          tarantool-version: '1.10.14'
          nightly-build: false

      - uses: ./.github/actions/verify-version
        with:
          tarantool-version: '1.10.14-0'
          from-cache: true

      - name: Install 1.10.LATEST (non-cached)
        uses: ./
        with:
          tarantool-version: '${{ steps.latest-version.outputs.abc }}'
          nightly-build: false

      - uses: ./.github/actions/verify-version
        with:
          tarantool-version: '${{ steps.latest-version.outputs.git-describe }}'
          from-cache: false

  # This test case verifies that a two digit version is installed
  # without any problem after a three digit version (not a latest
  # one).
  #
  # - install 1.10.14
  #   - checks: version, non-cached
  # - uninstall tarantool
  # - install 1.10
  #   - checks: version, non-cached
  test-exact-version-then-two-digit-version:
    runs-on: ubuntu-latest
    env:
      TARANTOOL_CACHE_KEY_SUFFIX: -D-${{ github.run_id }}
    steps:
      - uses: actions/checkout@v4

      - id: latest-version
        uses: ./.github/actions/latest-version
        with:
          tarantool-series: '1.10'

      - name: Install 1.10.14 (non-cached)
        uses: ./
        with:
          tarantool-version: '1.10.14'
          nightly-build: false

      - uses: ./.github/actions/verify-version
        with:
          tarantool-version: '1.10.14-0'
          from-cache: false

      - name: Uninstall tarantool
        run: sudo apt-get -y remove tarantool tarantool-dev tarantool-common

      - name: Install 1.10 (non-cached)
        uses: ./
        with:
          tarantool-version: '1.10'
          nightly-build: false

      - uses: ./.github/actions/verify-version
        with:
          tarantool-version: '${{ steps.latest-version.outputs.git-describe }}'
          from-cache: false

  # This test case verifies that a two digit version is installed
  # without any problem after a three digit version (the latest
  # one).
  #
  # - install 1.10.LATEST
  #   - checks: version, non-cached
  # - uninstall tarantool
  # - install 1.10
  #   - checks: version, cached
  test-exact-version-latest-then-two-digit-version:
    runs-on: ubuntu-latest
    env:
      TARANTOOL_CACHE_KEY_SUFFIX: -E-${{ github.run_id }}
    steps:
      - uses: actions/checkout@v4

      - id: latest-version
        uses: ./.github/actions/latest-version
        with:
          tarantool-series: '1.10'

      - name: Install 1.10.LATEST (non-cached)
        uses: ./
        with:
          tarantool-version: '${{ steps.latest-version.outputs.abc }}'
          nightly-build: false

      - uses: ./.github/actions/verify-version
        with:
          tarantool-version: '${{ steps.latest-version.outputs.git-describe }}'
          from-cache: false

      - name: Uninstall tarantool
        run: sudo apt-get -y remove tarantool tarantool-dev tarantool-common

      - name: Install 1.10 (cached)
        uses: ./
        with:
          tarantool-version: '1.10'
          nightly-build: false

      - uses: ./.github/actions/verify-version
        with:
          tarantool-version: '${{ steps.latest-version.outputs.git-describe }}'
          from-cache: true

  # This test case performs basic test of four digit version
  # support (for nightly repositories).
  #
  # - install 1.10.LATEST.LATEST (nightly)
  #   - checks: version, non-cached
  # - uninstall tarantool
  # - install 1.10.LATEST (nightly)
  #   - checks: version, cached
  # - install 1.10 (nightly)
  #   - checks: version, cached
  test-exact-version-nightly:
    runs-on: ubuntu-latest
    env:
      TARANTOOL_CACHE_KEY_SUFFIX: -F-${{ github.run_id }}
    steps:
      - uses: actions/checkout@v4

      - id: latest-version
        uses: ./.github/actions/latest-version
        with:
          tarantool-series: '1.10'
          nightly-build: true

      - name: Install 1.10.LATEST.LATEST (nightly, non-cached)
        uses: ./
        with:
          tarantool-version: '${{ steps.latest-version.outputs.abcd }}'
          nightly-build: true

      - uses: ./.github/actions/verify-version
        with:
          tarantool-version: '${{ steps.latest-version.outputs.git-describe }}'
          from-cache: false

      - name: Uninstall tarantool
        run: sudo apt-get -y remove tarantool tarantool-dev tarantool-common

      - name: Install 1.10.LATEST (nightly, cached)
        uses: ./
        with:
          tarantool-version: '1.10'
          nightly-build: true

      - uses: ./.github/actions/verify-version
        with:
          tarantool-version: '${{ steps.latest-version.outputs.git-describe }}'
          from-cache: true

      - name: Install 1.10 (nightly, cached)
        uses: ./
        with:
          tarantool-version: '1.10'
          nightly-build: true

      - uses: ./.github/actions/verify-version
        with:
          tarantool-version: '${{ steps.latest-version.outputs.git-describe }}'
          from-cache: true

  # This test case installs tarantool of series-2 and series-3
  # using one/two/three digit version specifier.
  #
  # Runs on amd64 and arm64 architecture.
  #
  # It performs the following steps and checks.
  #
  # - install tarantool
  #   - checks: version, non-cached
  # - uninstall tarantool
  # - install tarantool
  #   - checks: version, cached
  test-series-2-and-3:
    strategy:
      fail-fast: false
      matrix:
        tarantool:
          - '2'
          - '2.10'
          - '2.10.0'
          - '3'
          - '3.0'
          - '3.0.0'
        runs-on: [ubuntu-24.04, ubuntu-24.04-arm]
    runs-on: ${{ matrix.runs-on }}
    env:
      # github.run_id is the same across different jobs created
      # from the same matrix.
      TARANTOOL_CACHE_KEY_SUFFIX: -G-${{ matrix.tarantool }}-${{ github.run_id }}
    steps:
      - uses: actions/checkout@v4

      - name: Install ${{ matrix.tarantool }} (non-cached)
        uses: ./
        with:
          tarantool-version: '${{ matrix.tarantool }}'

      - uses: ./.github/actions/verify-version
        with:
          tarantool-version: '${{ matrix.tarantool }}'
          from-cache: false

      - name: Uninstall tarantool
        run: sudo apt-get -y remove tarantool tarantool-dev tarantool-common

      - name: Install ${{ matrix.tarantool }} (cached)
        uses: ./
        with:
          tarantool-version: '${{ matrix.tarantool }}'

      - uses: ./.github/actions/verify-version
        with:
          tarantool-version: '${{ matrix.tarantool }}'
          from-cache: true

  # There is no 1.10.999 build. Verify that an attempt to install
  # it fails.
  test-unknown-version:
    runs-on: ubuntu-latest
    env:
      TARANTOOL_CACHE_KEY_SUFFIX: -H-${{ github.run_id }}
    steps:
      - uses: actions/checkout@v4

      - name: Attempt to install 1.10.999 (expect failure)
        uses: ./
        with:
          tarantool-version: '1.10.999'
        continue-on-error: true
        id: install

      - name: Verify that the previous step fails
        run: |
          [ "${{ steps.install.outcome }}" = "failure" ]

  test-rocks:
    # Ubuntu Jammy (22.04) has tarantool-2.6.0 in its repository.
    # The test verifies that tarantool-common-2.6.0 is not pulled
    # as a dependency, so this particular Ubuntu version is
    # acquired explicitly.
    runs-on: ubuntu-22.04
    env:
      TARANTOOL_CACHE_KEY_SUFFIX: -I-${{ github.run_id }}
    steps:
      - uses: actions/checkout@v4

      # Verify non-cached installation. The cached one has exactly
      # same luarocks, no need to verify it.
      - name: Install 1.10
        uses: ./
        with:
          tarantool-version: '1.10'

      # If luarocks 3 is installed instead of luarocks 2, this
      # command fails with the following error message.
      #
      # > module 'luarocks.core.cfg' not found
      #
      # See https://github.com/tarantool/tarantool/issues/5429 for
      # details.
      - name: Verify tarantoolctl rocks
        run: |
          tarantoolctl rocks list
